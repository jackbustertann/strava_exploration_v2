# name: ci-pipeline
# on: 
#   - push

# jobs:
#   unit-tests-and-linting:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout branch to runner
#         uses: actions/checkout@v3

#       - name: Install python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'
#           architecture: 'x64'

#       - name: Install dependencies
#         run: pip install -r requirements.txt

#       - name: Apply linting to all python scripts
#         run: black *.py 

#       - name: Apply unit tests to classes
#         run: pytest tests/*.py -v --cov

# ci pipeline (on push)
name: Push a new tag with minor update

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor

      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

# - install python + dependencies
# - lint + clean files
# - run unit tests

# cd pipeline (on merge)
# - get project version from github
# - extract bump size from branch name {patch/minor/major}
# - bump project version
# - build + tag docker image with new version
# - push docker image to remote repo
# - create new release in github
