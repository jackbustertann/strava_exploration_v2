# ci pipeline (on push to master)
name: cd-pipeline

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch to runner
        uses: actions/checkout@v2

      - name: get PR params
        uses: actions-ecosystem/action-get-merged-pull-request@v1
        id: get-merged-pull-request
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: check label
        shell: bash
        if: ${{ steps.get-merged-pull-request.outputs.labels == null }}
        run: |
          echo "no release label provided!"
          exit 1

      - name: get latest github release tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true

      - name: bump github release tag
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.get-merged-pull-request.outputs.labels }}

      - name: echo version bump
        shell: bash
        run: |
          echo "Bumping github version from $CURRENT_VERSION to $NEW_VERSION"
        env:
          CURRENT_VERSION: ${{ steps.get-latest-tag.outputs.tag }}
          NEW_VERSION: ${{ steps.bump-semver.outputs.new_version }}

      - name: push new github release tag
        uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "${{ steps.bump-semver.outputs.new_version }}: PR #${{ steps.get-merged-pull-request.outputs.number }} ${{ steps.get-merged-pull-request.outputs.title }}"

      - name: create new github release
        uses: actions/create-release@v1
        if: ${{ steps.release-label.outputs.level == 'major' || steps.release-label.outputs.level == 'minor' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: ${{ steps.bump-semver.outputs.new_version }}
          body: ${{ steps.regex-match.outputs.group1 }}

      - name: echo success message
        uses: actions-ecosystem/action-create-comment@v1
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get-merged-pull-request.outputs.number }}
          body: |
            The new version [${{ steps.bump-semver.outputs.new_version }}](https://github.com/${{ github.repository }}/releases/tag/${{ steps.bump-semver.outputs.new_version }}) has been released :tada:

# cd pipeline (on push to master)
# - get project version from github *
# - extract bump size from PR tag *
# - bump project version *
# - create new release in github *
# - build + tag docker image with new version
# - push docker image to remote repo